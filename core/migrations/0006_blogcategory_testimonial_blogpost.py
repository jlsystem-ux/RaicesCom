# Generated by Django 5.2.1 on 2025-09-20 14:21

import core.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0005_staffprofile'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('name_en', models.CharField(max_length=100, verbose_name='Name (English)')),
                ('name_es', models.CharField(max_length=100, verbose_name='Name (Spanish)')),
                ('slug', models.SlugField(unique=True)),
                ('color', models.CharField(default='#4A90E2', help_text='Hex color code', max_length=7, verbose_name='Color')),
                ('icon', models.CharField(blank=True, help_text='FontAwesome icon class', max_length=50, verbose_name='Icon')),
            ],
            options={
                'verbose_name': 'Blog Category',
                'verbose_name_plural': 'Blog Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('country_of_origin', models.CharField(max_length=100, verbose_name='Country of Origin')),
                ('content', models.TextField(verbose_name='Testimonial')),
                ('content_en', models.TextField(verbose_name='Testimonial (English)')),
                ('content_es', models.TextField(verbose_name='Testimonial (Spanish)')),
                ('photo', models.ImageField(blank=True, help_text='Optional photo (300x300 pixels recommended)', null=True, upload_to='testimonials/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])], verbose_name='Photo')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Featured')),
                ('is_published', models.BooleanField(default=True, verbose_name='Published')),
                ('consent_given', models.BooleanField(default=False, help_text='Consent to publish story', verbose_name='Consent Given')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Testimonial',
                'verbose_name_plural': 'Testimonials',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('title_en', models.CharField(max_length=200, verbose_name='Title (English)')),
                ('title_es', models.CharField(max_length=200, verbose_name='Title (Spanish)')),
                ('slug', models.SlugField(unique=True)),
                ('summary', models.TextField(max_length=300, verbose_name='Summary')),
                ('summary_en', models.TextField(max_length=300, verbose_name='Summary (English)')),
                ('summary_es', models.TextField(max_length=300, verbose_name='Summary (Spanish)')),
                ('content', models.TextField(verbose_name='Content')),
                ('content_en', models.TextField(verbose_name='Content (English)')),
                ('content_es', models.TextField(verbose_name='Content (Spanish)')),
                ('post_type', models.CharField(choices=[('news', 'News'), ('story', 'Community Story'), ('guide', 'Guide'), ('update', 'Update')], default='news', max_length=20, verbose_name='Post Type')),
                ('featured_image', models.ImageField(blank=True, help_text='Recommended size: 800x400 pixels', null=True, upload_to=core.models.blog_image_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'webp'])], verbose_name='Featured Image')),
                ('is_published', models.BooleanField(default=False, verbose_name='Published')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Featured')),
                ('published_date', models.DateTimeField(blank=True, null=True, verbose_name='Published Date')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta_description', models.TextField(blank=True, max_length=160, verbose_name='Meta Description')),
                ('meta_keywords', models.CharField(blank=True, max_length=255, verbose_name='Meta Keywords')),
                ('reading_time', models.PositiveIntegerField(default=5, verbose_name='Reading Time (minutes)')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to='core.blogcategory')),
            ],
            options={
                'verbose_name': 'Blog Post',
                'verbose_name_plural': 'Blog Posts',
                'ordering': ['-published_date', '-created_at'],
                'indexes': [models.Index(fields=['is_published', '-published_date'], name='core_blogpo_is_publ_cd1340_idx'), models.Index(fields=['post_type'], name='core_blogpo_post_ty_becfa3_idx'), models.Index(fields=['is_featured'], name='core_blogpo_is_feat_7f8ebf_idx')],
            },
        ),
    ]
